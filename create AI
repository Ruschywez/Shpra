def build_model():
    base_cnn = tf.keras.applications.ResNet50(weights=None, input_shape=(250, 250, 3), include_top=False, pooling='avg')
    
    input1 = tf.keras.layers.Input(shape=(250, 250, 3))
    input2 = tf.keras.layers.Input(shape=(250, 250, 3))
    
    features1 = base_cnn(input1)
    features2 = base_cnn(input2)
    
    merged = tf.keras.layers.Subtract()([features1, features2])
    merged = tf.keras.layers.Dense(256, activation="relu")(merged)
    merged = tf.keras.layers.Dense(128, activation="relu")(merged)
    merged = tf.keras.layers.Dense(1, activation="sigmoid")(merged)
    
    model = tf.keras.models.Model(inputs=[input1, input2], outputs=merged)
    model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.0001),
                  loss="binary_crossentropy",
                  metrics=["accuracy"])
    return model
